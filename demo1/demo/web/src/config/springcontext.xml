<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置信息读取 -->
    <context:property-placeholder location="classpath:config/config.properties"/>
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:config/config.properties</value>
            </list>
        </property>
    </bean>
    <!-- 连接池配置,destroy-method="close"的作用是当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用 -->
    <!-- 连接池配置 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${driverClass}"/>
        <property name="jdbcUrl" value="${jdbcUrl}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="preferredTestQuery" value="${preferredTestQuery}"/>
        <!-- 最大空闲时间，60秒内未使用则连接被丢弃，若为0则永不丢弃 -->
        <property name="maxIdleTime" value="${maxIdleTime}"/>
        <!-- 当连接池中的连接耗尽的时候，c3p0一次同时获取的连接数 -->
        <property name="acquireIncrement" value="${acquireIncrement}"/>
        <!-- jdbc的标准，用以控制数据源内加载的PreparedStatements数量，但由于预缓存的statements属
        于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与
        maxStatementsPerConnection均为0，则缓存被关闭 -->
        <property name="maxStatements" value="${maxStatements}"/>
        <!-- 每60秒检查所有连接池中的空闲连接 -->
        <property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}"/>
    </bean>
    <!-- SESSIONFACTORY配置 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>${hibernate.entity}</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            </props>
        </property>
    </bean>

    <!-- 事务管理器配置 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- HIBERNATE模板配置 -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- JDBC模板配置 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 项目启动监听 -->
    <bean id="startupListener" class="demo.listener.StartupListener" init-method="init"/>

    <!-- 开启spring mvc对上传的支持 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="maxUploadSize" value="10240000000"></property>
    </bean>

</beans>